"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const KeyType_1 = require("./KeyType");
/**
 * Class to model an internal key object
 */
class KeyObject {
    /**
     * Create an instance of DidKey.
     * @param keyType Key type.
     * @param keyObject The key object to store.
     */
    constructor(keyType, keyObject) {
        this._keyType = keyType;
        this._keyObject = keyObject;
        this._isKeyPair = false;
        if (!this.isPublicKeyCrypto) {
            this._secretKey = keyObject;
            return;
        }
        if (this._keyObject.publicKey && this._keyObject.privateKey) {
            this._isKeyPair = true;
            this._publicKey = this._keyObject.publicKey;
            this._privateKey = this._keyObject.privateKey;
            return;
        }
        else {
            if (this._keyObject.type) {
                switch (this._keyObject.type) {
                    case 'private':
                        this._privateKey = this._keyObject;
                        return;
                    case 'public':
                        this._publicKey = this._keyObject;
                        return;
                }
            }
            throw new Error(`Key with type '${this._keyType}' is expected to have the type public or private`);
        }
    }
    /**
     * Gets the key type.
     */
    get keyType() {
        return this._keyType;
    }
    /**
     * Gets a value indicating whether the key is a public key crypto scheme
     */
    get isPublicKeyCrypto() {
        switch (this._keyType) {
            case KeyType_1.KeyType.EC:
            case KeyType_1.KeyType.RSA:
                return true;
            case KeyType_1.KeyType.Oct:
                return false;
        }
        throw new Error(`Key type '${this._keyType}' is not supported`);
    }
    /**
     * Gets a value indicating whether the key is a private key only
     */
    get isPrivateKey() {
        if (this.isPublicKeyCrypto && this.privateKey) {
            return true;
        }
        return false;
    }
    /**
     * Gets a value indicating whether the key object is a key pair containing a public and private key
     */
    get isKeyPair() {
        return this._isKeyPair;
    }
    /**
     * Gets secret key
     */
    get secretKey() {
        return this._secretKey;
    }
    /**
     * Gets public key
     */
    get publicKey() {
        return this._publicKey;
    }
    /**
     * Gets private key
     */
    get privateKey() {
        return this._privateKey;
    }
}
exports.default = KeyObject;
//# sourceMappingURL=KeyObject.js.map